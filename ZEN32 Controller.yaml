blueprint:
  name: "Zooz ZEN32 Scene Controller: Button actions"
  description: <
    Setup actions for individual buttons on the Zooz ZEN32 Scene Controller.
  domain: automation

  input:
    device_id:
      name: Source
      description: |
        The device to add automation triggers to.
      selector:
        device:
          integration: zwave_js
          manufacturer: Zooz
          model: ZEN32
          multiple: false

    local_control:
      name: "Configuration: Local phyiscal control"
      description: Enable or disable physical paddle on/off control (also known as "Smart Bulb Mode").
      default: 'undefined'
      selector: 
        select:
          mode: dropdown
          options:
            - label: Do not modify configuration
              value: 'undefined'
            - label: Physical control (big button) enabled (device default)
              value: '1'
            - label: Physical control (big button) disabled (control via Z-Wave only)
              value: '0'

    button_5_1x:      {name: Scene 5 (Big Button) press 1x,   default: [], selector: {action: {}}, description: Action to run when the button is pressed one time.}
    button_5_2x:      {name: Scene 5 (Big Button) press 2x,   default: [], selector: {action: {}}, description: Action to run when the button is pressed two times.}
    button_5_3x:      {name: Scene 5 (Big Button) press 3x,   default: [], selector: {action: {}}, description: Action to run when the button is pressed three times.}
    button_5_4x:      {name: Scene 5 (Big Button) press 4x,   default: [], selector: {action: {}}, description: Action to run when the button is pressed four times.}
    button_5_5x:      {name: Scene 5 (Big Button) press 5x,   default: [], selector: {action: {}}, description: Action to run when the button is pressed five times.}
    button_5_hold:    {name: Scene 5 (Big Button) hold,       default: [], selector: {action: {}}, description: Action to run when the button is held.}
    button_5_release: {name: Scene 5 (Big Button) release,    default: [], selector: {action: {}}, description: Action to run when the button is released.}

    button_1_1x:      {name: Scene 1 (Top Left) press 1x,     default: [], selector: {action: {}}, description: Action to run when the button is pressed one time.}
    button_1_2x:      {name: Scene 1 (Top Left) press 2x,     default: [], selector: {action: {}}, description: Action to run when the button is pressed two times.}
    button_1_3x:      {name: Scene 1 (Top Left) press 3x,     default: [], selector: {action: {}}, description: Action to run when the button is pressed three times.}
    button_1_4x:      {name: Scene 1 (Top Left) press 4x,     default: [], selector: {action: {}}, description: Action to run when the button is pressed four times.}
    button_1_5x:      {name: Scene 1 (Top Left) press 5x,     default: [], selector: {action: {}}, description: Action to run when the button is pressed five times.}
    button_1_hold:    {name: Scene 1 (Top Left) hold,         default: [], selector: {action: {}}, description: Action to run when the button is held.}
    button_1_release: {name: Scene 1 (Top Left) release,      default: [], selector: {action: {}}, description: Action to run when the button is released.}

    button_2_1x:      {name: Scene 2 (Top Right) press 1x,    default: [], selector: {action: {}}, description: Action to run when the button is pressed one time.}
    button_2_2x:      {name: Scene 2 (Top Right) press 2x,    default: [], selector: {action: {}}, description: Action to run when the button is pressed two times.}
    button_2_3x:      {name: Scene 2 (Top Right) press 3x,    default: [], selector: {action: {}}, description: Action to run when the button is pressed three times.}
    button_2_4x:      {name: Scene 2 (Top Right) press 4x,    default: [], selector: {action: {}}, description: Action to run when the button is pressed four times.}
    button_2_5x:      {name: Scene 2 (Top Right) press 5x,    default: [], selector: {action: {}}, description: Action to run when the button is pressed five times.}
    button_2_hold:    {name: Scene 2 (Top Right) hold,        default: [], selector: {action: {}}, description: Action to run when the button is held.}
    button_2_release: {name: Scene 2 (Top Right) release,     default: [], selector: {action: {}}, description: Action to run when the button is released.}

    button_3_1x:      {name: Scene 3 (Bottom Left) press 1x,  default: [], selector: {action: {}}, description: Action to run when the button is pressed one time.}
    button_3_2x:      {name: Scene 3 (Bottom Left) press 2x,  default: [], selector: {action: {}}, description: Action to run when the button is pressed two times.}
    button_3_3x:      {name: Scene 3 (Bottom Left) press 3x,  default: [], selector: {action: {}}, description: Action to run when the button is pressed three times.}
    button_3_4x:      {name: Scene 3 (Bottom Left) press 4x,  default: [], selector: {action: {}}, description: Action to run when the button is pressed four times.}
    button_3_5x:      {name: Scene 3 (Bottom Left) press 5x,  default: [], selector: {action: {}}, description: Action to run when the button is pressed five times.}
    button_3_hold:    {name: Scene 3 (Bottom Left) hold,      default: [], selector: {action: {}}, description: Action to run when the button is held.}
    button_3_release: {name: Scene 3 (Bottom Left) release,   default: [], selector: {action: {}}, description: Action to run when the button is released.}

    button_4_1x:      {name: Scene 4 (Bottom Right) press 1x, default: [], selector: {action: {}}, description: Action to run when the button is pressed one time.}
    button_4_2x:      {name: Scene 4 (Bottom Right) press 2x, default: [], selector: {action: {}}, description: Action to run when the button is pressed two times.}
    button_4_3x:      {name: Scene 4 (Bottom Right) press 3x, default: [], selector: {action: {}}, description: Action to run when the button is pressed three times.}
    button_4_4x:      {name: Scene 4 (Bottom Right) press 4x, default: [], selector: {action: {}}, description: Action to run when the button is pressed four times.}
    button_4_5x:      {name: Scene 4 (Bottom Right) press 5x, default: [], selector: {action: {}}, description: Action to run when the button is pressed five times.}
    button_4_hold:    {name: Scene 4 (Bottom Right) hold,     default: [], selector: {action: {}}, description: Action to run when the button is held.}
    button_4_release: {name: Scene 4 (Bottom Right) release,  default: [], selector: {action: {}}, description: Action to run when the button is released.}

mode: parallel
max_exceeded: silent

variables: 
  # from https://www.support.getzooz.com/kb/article/608-zen32-scene-controller-advanced-settings/
  led_indicator_mode_param: "{{ ((scene_button | int) % 5) + 1 }}" # '005' => 1, '001' => 2, '002' => 3, '003' => 4, '004' => 5


trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      command_class_name: Central Scene
      device_id: !input device_id

  # used for initialization
  - platform: event
    event_type: automation_reloaded

action:
  - variables:
      #button_id: '{{ trigger.event.data.property_key_name }}'
      scene_id: "{{ trigger.event.data.label }}"
      event_action: "{{ trigger.event.data.value }}"
  - choose:
      # initialize
      # docs: https://www.support.getzooz.com/kb/article/608-zen32-scene-controller-advanced-settings/
      - conditions: "{{ trigger.event.event_type == 'automation_reloaded' }}"
        sequence:
        # setup local control
          - if:
              - condition: template
                value_template: "{{ '!input local_control' != 'undefined' }}"
            then:
              - alias: "zwavejs: Setup local control"
                service: zwave_js.set_config_parameter
                data: { parameter: 19, value: !input local_control }
                target: { device_id: !input device_id }

      - conditions: "{{ scene_id == 'Scene 005' }}"
        sequence: 
          - choose:
              - { conditions: "{{ event_action == 'KeyPressed' }}",    sequence: !input button_5_1x }
              - { conditions: "{{ event_action == 'KeyPressed2x' }}",  sequence: !input button_5_2x }
              - { conditions: "{{ event_action == 'KeyPressed3x' }}",  sequence: !input button_5_3x }
              - { conditions: "{{ event_action == 'KeyPressed4x' }}" , sequence: !input button_5_4x }
              - { conditions: "{{ event_action == 'KeyPressed5x' }}",  sequence: !input button_5_5x }
              - { conditions: "{{ event_action == 'KeyHeldDown' }}",   sequence: !input button_5_hold }
              - { conditions: "{{ event_action == 'KeyReleased' }}",   sequence: !input button_5_release }

      - conditions: "{{ scene_id == 'Scene 001' }}"
        sequence:
          - choose:
              - { conditions: "{{ event_action == 'KeyPressed' }}",    sequence: !input button_1_1x }
              - { conditions: "{{ event_action == 'KeyPressed2x' }}",  sequence: !input button_1_2x }
              - { conditions: "{{ event_action == 'KeyPressed3x' }}",  sequence: !input button_1_3x }
              - { conditions: "{{ event_action == 'KeyPressed4x' }}" , sequence: !input button_1_4x }
              - { conditions: "{{ event_action == 'KeyPressed5x' }}",  sequence: !input button_1_5x }
              - { conditions: "{{ event_action == 'KeyHeldDown' }}",   sequence: !input button_1_hold }
              - { conditions: "{{ event_action == 'KeyReleased' }}",   sequence: !input button_1_release }

      - conditions: "{{ scene_id == 'Scene 002' }}"
        sequence: 
          - choose:
              - { conditions: "{{ event_action == 'KeyPressed' }}",    sequence: !input button_2_1x }
              - { conditions: "{{ event_action == 'KeyPressed2x' }}",  sequence: !input button_2_2x }
              - { conditions: "{{ event_action == 'KeyPressed3x' }}",  sequence: !input button_2_3x }
              - { conditions: "{{ event_action == 'KeyPressed4x' }}" , sequence: !input button_2_4x }
              - { conditions: "{{ event_action == 'KeyPressed5x' }}",  sequence: !input button_2_5x }
              - { conditions: "{{ event_action == 'KeyHeldDown' }}",   sequence: !input button_2_hold }
              - { conditions: "{{ event_action == 'KeyReleased' }}",   sequence: !input button_2_release }

      - conditions: "{{ scene_id == 'Scene 003' }}"
        sequence: 
          - choose:
              - { conditions: "{{ event_action == 'KeyPressed' }}",    sequence: !input button_3_1x }
              - { conditions: "{{ event_action == 'KeyPressed2x' }}",  sequence: !input button_3_2x }
              - { conditions: "{{ event_action == 'KeyPressed3x' }}",  sequence: !input button_3_3x }
              - { conditions: "{{ event_action == 'KeyPressed4x' }}" , sequence: !input button_3_4x }
              - { conditions: "{{ event_action == 'KeyPressed5x' }}",  sequence: !input button_3_5x }
              - { conditions: "{{ event_action == 'KeyHeldDown' }}",   sequence: !input button_3_hold }
              - { conditions: "{{ event_action == 'KeyReleased' }}",   sequence: !input button_3_release }

      - conditions: "{{ scene_id == 'Scene 004' }}"
        sequence: 
          - choose:
              - { conditions: "{{ event_action == 'KeyPressed' }}",    sequence: !input button_4_1x }
              - { conditions: "{{ event_action == 'KeyPressed2x' }}",  sequence: !input button_4_2x }
              - { conditions: "{{ event_action == 'KeyPressed3x' }}",  sequence: !input button_4_3x }
              - { conditions: "{{ event_action == 'KeyPressed4x' }}" , sequence: !input button_4_4x }
              - { conditions: "{{ event_action == 'KeyPressed5x' }}",  sequence: !input button_4_5x }
              - { conditions: "{{ event_action == 'KeyHeldDown' }}",   sequence: !input button_4_hold }
              - { conditions: "{{ event_action == 'KeyReleased' }}",   sequence: !input button_4_release }
