blueprint:
  name: "Zooz ZEN77 S2 Dimmer"
  description: >
    Setup actions for all the different key press combinations on the
    Zooz ZEN77 S2 700-series dimmer.
  domain: automation

  input:
    device_id:
      name: Source
      description: |
        The device to add automation triggers to. 
        Note that the "Scene Control" parameter will be enabled on this device (triggered by it coming online).
      selector:
        device:
          integration: zwave_js
          manufacturer: Zooz
          model: ZEN77
          multiple: false

    local_control:
      name: "Configuration: Local phyiscal control"
      description: Enable or disable physical paddle on/off control (also known as "Smart Bulb Mode").
      default: 'undefined'
      selector: 
        select:
          mode: dropdown
          options:
            - label: Do not modify configuration
              value: 'undefined'
            - label: Physical paddle control enabled (device default)
              value: '1'
            - label: Physical paddle control disabled (control via Z-Wave only)
              value: '0'

    button_1_1x:
      name: Paddle Up press 1x
      description: Action to run when the button is pressed one time.
      default: []
      selector:
        action: {}
    button_1_2x:
      name: Paddle Up press 2x
      description: Action to run when the button is pressed two times.
      default: []
      selector:
        action: {}
    button_1_3x:
      name: Paddle Up press 3x
      description: |
        Action to run when the button is pressed three times.
        Default: Enter inclusion/pairing mode.
      default: []
      selector:
        action: {}
    button_1_4x:
      name: Paddle Up press 4x
      description: Action to runwhen the button is pressed four times.
      default: []
      selector:
        action: {}
    button_1_5x:
      name: Paddle Up press 5x
      description: Action to run on when the button is pressed five times.
      default: []
      selector:
        action: {}
    button_1_hold:
      name: Paddle Up Hold
      description: | 
        Action to run when the button is held.
        Default: Increase dimmer brightness level.
      default: []
      selector:
        action: {}
    button_1_release:
      name: Paddle Up Release
      description: Action to run when the button is released.
      default: []
      selector:
        action: {}

    button_2_1x:
      name: Paddle Down press 1x
      description: |
        Action to run when the button is pressed one time.
        Default: Turn off dimmer switch load.
      default: []
      selector:
        action: {}
    button_2_2x:
      name: Paddle Down press 2x
      description: Action to run when the button is pressed two times.
      default: []
      selector:
        action: {}
    button_2_3x:
      name: Paddle Down press 3x
      description: |
        Action to run when the button is pressed three times.
        Default: Enter exclusion/un-pairing mode.
      default: []
      selector:
        action: {}
    button_2_4x:
      name: Paddle Down press 4x
      description: Action to runwhen the button is pressed four times.
      default: []
      selector:
        action: {}
    button_2_5x:
      name: Paddle Down press 5x
      description: Action to run on when the button is pressed five times.
      default: []
      selector:
        action: {}
    button_2_hold:
      name: Paddle Down Hold
      description: |
        Action to run when the button is held.
        Default: Decrease dimmer brightness level.
      default: []
      selector:
        action: {}
    button_2_release:
      name: Bottom Paddle Release
      description: Action to run when the button is released.
      default: []
      selector:
        action: {}

mode: restart
max_exceeded: silent

trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      command_class_name: Central Scene
      device_id: !input device_id

  # used for initialization
  - platform: event
    event_type: automation_reloaded

action:
  - variables:
      #button_id: '{{ trigger.event.data.property_key_name }}'
      scene_id: "{{ trigger.event.data.label }}"
      event_action: "{{ trigger.event.data.value }}"
  - choose:
      # initialize
      # docs: https://www.support.getzooz.com/kb/article/550-zen77-s2-dimmer-700-advanced-settings/
      - conditions: "{{ trigger.event.event_type == 'automation_reloaded' }}"
        sequence:
          # enable scene control
          - service: zwave_js.set_config_parameter
            data:
              parameter: 13
              value: 1
            target: 
              device_id: !input device_id
          # setup local control
          - if:
              - condition: template
                value_template: "{{ '!input local_control' != 'undefined' }}"
            then:
              - service: zwave_js.set_config_parameter
                data:
                  parameter: 15
                  value: !input local_control
                target: 
                  device_id: !input device_id

      # button press event
      - conditions: "{{ scene_id == 'Scene 001' }}"
        sequence:
          - choose:
              - conditions: "{{ event_action == 'KeyPressed' }}"
                sequence: !input button_1_1x
              - conditions: "{{ event_action == 'KeyPressed2x' }}"
                sequence: !input button_1_2x
              - conditions: "{{ event_action == 'KeyPressed3x' }}"
                sequence: !input button_1_3x
              - conditions: "{{ event_action == 'KeyPressed4x' }}"
                sequence: !input button_1_4x
              - conditions: "{{ event_action == 'KeyPressed5x' }}"
                sequence: !input button_1_5x
              - conditions: "{{ event_action == 'KeyHeldDown' }}"
                sequence: !input button_1_hold
              - conditions: "{{ event_action == 'KeyReleased' }}"
                sequence: !input button_1_release
      - conditions: "{{ scene_id == 'Scene 002' }}"
        sequence: 
          - choose:
              - conditions: "{{ event_action == 'KeyPressed' }}"
                sequence: !input button_2_1x
              - conditions: "{{ event_action == 'KeyPressed2x' }}"
                sequence: !input button_2_2x
              - conditions: "{{ event_action == 'KeyPressed3x' }}"
                sequence: !input button_2_3x
              - conditions: "{{ event_action == 'KeyPressed4x' }}"
                sequence: !input button_2_4x
              - conditions: "{{ event_action == 'KeyPressed5x' }}"
                sequence: !input button_2_5x
              - conditions: "{{ event_action == 'KeyHeldDown' }}"
                sequence: !input button_2_hold
              - conditions: "{{ event_action == 'KeyReleased' }}"
                sequence: !input button_2_release
